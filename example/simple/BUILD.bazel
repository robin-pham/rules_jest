load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@npm//:jest-cli/package_json.bzl", "bin")

jest_test(
    name = "test",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

bin.jest_binary(
    name = "test-watch",
    args = [
        "--colors",
        "--rootDir",
        package_name(),
        "--config",
        "$(location :jest.config.js)",
        "--watchAll",
    ],
    copy_data_to_bin = False,
    data = [
        "babel.config.js",
        "index.test.ts",
        "index.ts",
        "jest.config.js",
        "//:node_modules/@babel/preset-typescript",
        "//:node_modules/babel-jest",
    ],
    tags = ["manual"],
)

jest_test(
    name = "test_user_data",
    data = [
        "index.js",
        "index.test.js",
        # should be able to add jest-cli & jest-junit explicitly in data
        "//:node_modules/jest-cli",
        "//:node_modules/jest-junit",
    ],
    node_modules = "//:node_modules",
)

jest_test(
    name = "js_config_test",
    config = "jest.config.js",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

jest_test(
    name = "cjs_config_test",
    config = "jest.config.cjs",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

jest_test(
    name = "mjs_config_test",
    config = "jest.config.mjs",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

jest_test(
    name = "json_config_test",
    config = "jest.config.json",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

jest_test(
    name = "gen_config_test",
    config = "gen.config.json",
    data = [
        "index.js",
        "index.test.js",
    ],
    node_modules = "//:node_modules",
)

genrule(
    name = "gen_config",
    testonly = True,
    srcs = ["jest.config.json"],
    outs = ["gen.config.json"],
    cmd = "cp $(location :jest.config.json) \"$@\"",
)
